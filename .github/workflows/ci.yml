name: Continuous Integration

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  REGISTRY: docker.io
  IMAGE_NAME: calendar-api

jobs:
  backend-build:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Compile backend
        run: ./mvnw compile -DskipTests

      - name: Run unit tests
        run: ./mvnw test

  frontend-lint:
    name: Frontend Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/main/webui/package-lock.json

      - name: Install frontend dependencies
        working-directory: src/main/webui
        run: npm ci

      - name: Run ESLint
        working-directory: src/main/webui
        run: npm run lint

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: backend-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/villagecompute/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image tags
        run: |
          echo "Docker image built and pushed:"
          echo "${{ steps.meta.outputs.tags }}"
